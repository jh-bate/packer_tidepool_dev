# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "cpus" {
  type    = string
  default = "1"
}

variable "disable_ipv6" {
  type    = string
  default = "true"
}

variable "disk_size" {
  type    = string
  default = "20000"
}

variable "headless" {
  type    = string
  default = "true"
}

variable "hostname" {
  type    = string
  default = "nz_tidepool"
}

variable "iso_checksum" {
  type    = string
  default = "sha256:a19d956e993a16fc6496c371e36dcc0eb85d2bdf6a8e86028b92ce62e9f585cd"
}

variable "iso_name" {
  type    = string
  default = "ubuntu-22.10-live-server-arm64.iso"
}

variable "iso_path" {
  type    = string
  default = "iso"
}

variable "iso_url" {
  type    = string
  default = "http://cdimage.ubuntu.com/ubuntu/releases/kinetic/release/ubuntu-22.10-live-server-arm64.iso"
}

variable "memory" {
  type    = string
  default = "2096"
}

variable "preseed" {
  type    = string
  default = "preseed.cfg"
}

variable "ssh_fullname" {
  type    = string
  default = "nz_tidepool"
}

variable "ssh_password" {
  type    = string
  default = "<to-do>"
}

variable "ssh_username" {
  type    = string
  default = "nz_tidepool"
}

variable "version" {
  type    = string
  default = "0.1"
}

variable "virtualbox_guest_os_type" {
  type    = string
  default = "Ubuntu_64"
}

variable "vm_name" {
  type    = string
  default = "nz_tidepool-ubuntu-22.10"
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "virtualbox-iso" "autogenerated_1" {
  boot_command            = ["<esc><esc><enter><wait>", "/install/vmlinuz<wait> ", "initrd=/install/initrd.gz ", "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/${var.preseed} ", "debian-installer=en_US auto locale=en_US kbd-chooser/method=us ", "hostname=${var.hostname} ", "grub-installer/bootdev=/dev/sda<wait> ", "fb=false debconf/frontend=noninteractive ", "keyboard-configuration/modelcode=pc105 keyboard-configuration/layout=fr keyboard-configuration/layoutcode=fr ", "keyboard-configuration/variant=azerty console-setup/ask_detect=false ", "-- <enter>"]
  disk_size               = "${var.disk_size}"
  guest_additions_path    = "VBoxGuestAdditions_{{ .Version }}.iso"
  guest_os_type           = "${var.virtualbox_guest_os_type}"
  hard_drive_interface    = "sata"
  headless                = "${var.headless}"
  http_directory          = "http"
  iso_checksum            = "${var.iso_checksum}"
  iso_urls                = ["${var.iso_path}/${var.iso_name}", "${var.iso_url}"]
  output_directory        = "output-${var.vm_name}"
  shutdown_command        = "echo '${var.ssh_password}'|sudo -S shutdown -P now"
  ssh_password            = "${var.ssh_password}"
  ssh_username            = "${var.ssh_username}"
  ssh_wait_timeout        = "1h"
  vboxmanage              = [["modifyvm", "{{ .Name }}", "--audio", "none"], ["modifyvm", "{{ .Name }}", "--usb", "off"], ["modifyvm", "{{ .Name }}", "--vram", "32"], ["modifyvm", "{{ .Name }}", "--graphicscontroller", "vmsvga"], ["modifyvm", "{{ .Name }}", "--vrde", "off"], ["modifyvm", "{{ .Name }}", "--nictype1", "virtio"], ["modifyvm", "{{ .Name }}", "--memory", "${var.memory}"], ["modifyvm", "{{ .Name }}", "--cpus", "${var.cpus}"]]
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "${var.vm_name}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.virtualbox-iso.autogenerated_1"]

  provisioner "file" {
    destination = "/tmp/docker.service"
    source      = "docker.service"
  }

  provisioner "file" {
    destination = "/home/${var.ssh_username}"
    source      = "scripts"
  }

  provisioner "shell" {
    environment_vars  = ["DEBIAN_FRONTEND=noninteractive", "SSH_USERNAME=${var.ssh_username}", "SSH_PASSWORD=${var.ssh_password}"]
    execute_command   = "echo '${var.ssh_password}'|{{ .Vars }} sudo -E -S bash '{{ .Path }}'"
    expect_disconnect = true
    scripts           = ["scripts/virtualbox.sh"]
  }

  provisioner "shell" {
    environment_vars = ["DEBIAN_FRONTEND=noninteractive", "SSH_USERNAME=${var.ssh_username}", "SSH_PASSWORD=${var.ssh_password}"]
    execute_command  = "echo '${var.ssh_password}'|{{ .Vars }} sudo -E -S bash '{{ .Path }}'"
    scripts          = ["scripts/docker.sh", "scripts/k8s.sh", "scripts/k3s.sh", "scripts/user.sh", "scripts/mongo.sh", "scripts/tidepool.sh"]
  }

}
